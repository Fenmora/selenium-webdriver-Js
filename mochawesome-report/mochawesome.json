{
  "stats": {
    "suites": 3,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-22T03:39:20.462Z",
    "end": "2022-09-22T03:39:27.443Z",
    "duration": 6981,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "533e5806-6b10-4b97-9eb4-8d4e04246cb1",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "84ff470c-338d-4a46-88c1-6f80ac511300",
          "title": "add to do test",
          "fullFile": "/Users/Fender/Projects/Dev/Selenium/selenium-webdriver-Js/test/firstTest.js",
          "file": "/test/firstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo application",
              "fullTitle": "add to do test successfully adds a todo application",
              "timedOut": false,
              "duration": 1677,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n//navigate to out application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//add a todo\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Fender - Selenium\", Key.RETURN);\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n//assert using chai should\ntodoText.should.equal(\"Fender - Selenium\");\n//Close Browser\nawait driver.quit();",
              "err": {},
              "uuid": "55dac1e3-2d73-4d4b-ab18-4cdea31f3ada",
              "parentUUID": "84ff470c-338d-4a46-88c1-6f80ac511300",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "55dac1e3-2d73-4d4b-ab18-4cdea31f3ada"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1677,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6bccc8e0-08a3-43fe-bcea-ab56f6137c5f",
          "title": "add to do test - Second Task",
          "fullFile": "/Users/Fender/Projects/Dev/Selenium/selenium-webdriver-Js/test/secondTest.js",
          "file": "/test/secondTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo application",
              "fullTitle": "add to do test - Second Task successfully adds a todo application",
              "timedOut": false,
              "duration": 1512,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n//navigate to out application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//add a todo\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Fender Mora - Selenium\", Key.RETURN);\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n//assert using chai should\ntodoText.should.equal(\"Fender Mora - Selenium\");\n//Close Browser\nawait driver.quit();",
              "err": {},
              "uuid": "e7dabad7-0586-466a-8800-b6e92a86d44e",
              "parentUUID": "6bccc8e0-08a3-43fe-bcea-ab56f6137c5f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e7dabad7-0586-466a-8800-b6e92a86d44e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1512,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cd354eb9-e74b-4db3-ad60-1ab85c017e3d",
          "title": "searching in google",
          "fullFile": "/Users/Fender/Projects/Dev/Selenium/selenium-webdriver-Js/test/thirdTest.js",
          "file": "/test/thirdTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "searching in google",
              "fullTitle": "searching in google searching in google",
              "timedOut": false,
              "duration": 3788,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var searchString = \"Automation testing with Selenium\";\n//To wait for browser to build and launch properly\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n//To fetch http://google.com from the browser with our code.\nawait driver.get(\"http://google.com\");\n//To send a search query by passing the value in searchString.\nawait driver.findElement(By.name(\"q\")).sendKeys(searchString, Key.RETURN);\n//Verify the page title and print it\nvar title = await driver.getTitle();\nconsole.log(\"Title is:\", title);\n//It is always a safe practice to quit the browser after execution\nawait driver.quit();",
              "err": {},
              "uuid": "8b91b06d-73b5-4fcd-9c95-3a197d83e7df",
              "parentUUID": "cd354eb9-e74b-4db3-ad60-1ab85c017e3d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b91b06d-73b5-4fcd-9c95-3a197d83e7df"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3788,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}